#+TITLE: DOCT notes
#+archive: %s_archive::datetree/
* Bugs :bug:
** RESEARCH overlapping captures & doct-get?
Should utilize [[help:org-capture-get][org-capture-get]] with the LOCAL parameter to avoid conflict between multiple capture processes.
I haven't run into any problems, but I do not often have multiple overlapping captures.
** TODO [[file:~/.emacs.d/straight/repos/doct/doct.el::unless (string-prefix-p "*" (string-trim string)][warns for elisp cases ]]
e.g.
#+begin_src emacs-lisp
(:template "%(my/function-that-returns-an-entry)")
#+end_src
* Documentation :documentation:
** TODO fix inaccurate return value in [[file:README.org::#custom-data][Custom data]]
 :doct-custom is now member of :doct
* Optimizations :optimization:
** TODO [[file:~/.emacs.d/straight/repos/doct/doct.el::dolist (heading (nreverse (seq-copy path))][Do we still need this?]]
We're copying declarations before operating on them now.
* Features :feature:
** TODO add doct-unload-function
remove installed hooks
https://www.gnu.org/software/emacs/manual/html_node/elisp/Coding-Conventions.html
https://www.gnu.org/software/emacs/manual/html_node/elisp/Unloading.html#Unloading
* Enhancements :enhancement:
** IDEA doct--type-check take pair as first arg? Returns pair if succesful
May reduce verbosity when using doct--first-in...
** IDEA [[file:~/.emacs.d/straight/repos/doct/doct.el::defun doct--maybe-warn (keyword value &optional prefix][generalize this to accept warning string and args]]
* Miscellaneous :misc:
Unload byte compiled file loaded by straight.el when developing
#+begin_src emacs-lisp :results silent
(when (featurep 'doct)
  (unload-feature 'doct t))
(load-file "~/.emacs.d/straight/repos/doct/doct.el")
#+end_src
** RESEARCH [[file:~/.emacs.d/straight/repos/doct/doct.el::defun doct--constraint-rule-list (constraint value][why do we only need eval in one case?]]
Both macros return lambdas...
** RESEARCH do we need to depend on org-capture?
only thing we're using is org-capture-plist at runtime.
org-capture is loaded by then.
we also add to: org-capture-hooks, org-capture-contexts

Ok to defvar these before org-capture loaded?
